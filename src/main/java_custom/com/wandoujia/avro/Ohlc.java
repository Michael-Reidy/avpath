/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package wandou.avro;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Ohlc extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {

  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Ohlc\",\"namespace\":\"wandou.avro\",\"fields\":[{\"name\":\"resetTime\",\"type\":\"long\",\"default\":0},{\"name\":\"open\",\"type\":\"double\",\"default\":0.0},{\"name\":\"high\",\"type\":\"double\",\"default\":0.0},{\"name\":\"low\",\"type\":\"double\",\"default\":0.0},{\"name\":\"close\",\"type\":\"double\",\"default\":0.0}]}");

  public static org.apache.avro.Schema getClassSchema() {
    return SCHEMA$;
  }
  @Deprecated
  public long resetTime;
  @Deprecated
  public double open;
  @Deprecated
  public double high;
  @Deprecated
  public double low;
  @Deprecated
  public double close;

  private boolean firstCloseSet = false;

  /**
   * Default constructor. Note that this does not initialize fields to their
   * default values from the schema. If that is desired then one should use
   * {@link \#newBuilder()}.
   */
  public Ohlc() {
  }

  /**
   * All-args constructor.
   */
  public Ohlc(java.lang.Long resetTime, java.lang.Double open, java.lang.Double high, java.lang.Double low, java.lang.Double close) {
    this.resetTime = resetTime;
    this.open = open;
    this.high = high;
    this.low = low;
    this.close = close;
  }

  public org.apache.avro.Schema getSchema() {
    return SCHEMA$;
  }

  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
      case 0:
        return resetTime;
      case 1:
        return open;
      case 2:
        return high;
      case 3:
        return low;
      case 4:
        return close;
      default:
        throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value = "unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
      case 0:
        setResetTime((java.lang.Long) value$);
        break;
      case 1:
        open = (java.lang.Double) value$;
        break;
      case 2:
        high = (java.lang.Double) value$;
        break;
      case 3:
        low = (java.lang.Double) value$;
        break;
      case 4:
        setClose((java.lang.Double) value$);
        break;
      default:
        throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'resetTime' field.
   */
  public java.lang.Long getResetTime() {
    return resetTime;
  }

  /**
   * Sets the value of the 'resetTime' field.
   *
   * @param value the value to set.
   */
  public void setResetTime(java.lang.Long value) {
    this.resetTime = value;
    this.firstCloseSet = false;
  }

  /**
   * Gets the value of the 'open' field.
   */
  public java.lang.Double getOpen() {
    return open;
  }

  /**
   * Sets the value of the 'open' field.
   *
   * @param value the value to set.
   */
  public void setOpen(java.lang.Double value) {
    this.open = value;
  }

  /**
   * Gets the value of the 'high' field.
   */
  public java.lang.Double getHigh() {
    return high;
  }

  /**
   * Sets the value of the 'high' field.
   *
   * @param value the value to set.
   */
  public void setHigh(java.lang.Double value) {
    this.high = value;
  }

  /**
   * Gets the value of the 'low' field.
   */
  public java.lang.Double getLow() {
    return low;
  }

  /**
   * Sets the value of the 'low' field.
   *
   * @param value the value to set.
   */
  public void setLow(java.lang.Double value) {
    this.low = value;
  }

  /**
   * Gets the value of the 'close' field.
   */
  public java.lang.Double getClose() {
    return close;
  }

  /**
   * Sets the value of the 'close' field.
   *
   * @param value the value to set.
   */
  public void setClose(java.lang.Double value) {
    this.close = value;
    if (!this.firstCloseSet) {
      this.firstCloseSet = true;
      this.open = value;
    }
    if (value > this.high) {
      this.high = value;
    }
    if (value < this.low) {
      this.low = value;
    }
  }

  /**
   * Creates a new Ohlc RecordBuilder
   */
  public static wandou.avro.Ohlc.Builder newBuilder() {
    return new wandou.avro.Ohlc.Builder();
  }

  /**
   * Creates a new Ohlc RecordBuilder by copying an existing Builder
   */
  public static wandou.avro.Ohlc.Builder newBuilder(wandou.avro.Ohlc.Builder other) {
    return new wandou.avro.Ohlc.Builder(other);
  }

  /**
   * Creates a new Ohlc RecordBuilder by copying an existing Ohlc instance
   */
  public static wandou.avro.Ohlc.Builder newBuilder(wandou.avro.Ohlc other) {
    return new wandou.avro.Ohlc.Builder(other);
  }

  /**
   * RecordBuilder for Ohlc instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Ohlc>
          implements org.apache.avro.data.RecordBuilder<Ohlc> {

    private long resetTime;
    private double open;
    private double high;
    private double low;
    private double close;

    /**
     * Creates a new Builder
     */
    private Builder() {
      super(wandou.avro.Ohlc.SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder
     */
    private Builder(wandou.avro.Ohlc.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.resetTime)) {
        this.resetTime = (long) data().deepCopy(fields()[0].schema(), other.resetTime);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.open)) {
        this.open = (double) data().deepCopy(fields()[1].schema(), other.open);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.high)) {
        this.high = (double) data().deepCopy(fields()[2].schema(), other.high);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.low)) {
        this.low = (double) data().deepCopy(fields()[3].schema(), other.low);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.close)) {
        this.close = (double) data().deepCopy(fields()[4].schema(), other.close);
        fieldSetFlags()[4] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Ohlc instance
     */
    private Builder(wandou.avro.Ohlc other) {
      super(wandou.avro.Ohlc.SCHEMA$);
      if (isValidValue(fields()[0], other.resetTime)) {
        this.resetTime = (long) data().deepCopy(fields()[0].schema(), other.resetTime);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.open)) {
        this.open = (double) data().deepCopy(fields()[1].schema(), other.open);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.high)) {
        this.high = (double) data().deepCopy(fields()[2].schema(), other.high);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.low)) {
        this.low = (double) data().deepCopy(fields()[3].schema(), other.low);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.close)) {
        this.close = (double) data().deepCopy(fields()[4].schema(), other.close);
        fieldSetFlags()[4] = true;
      }
    }

    /**
     * Gets the value of the 'resetTime' field
     */
    public java.lang.Long getResetTime() {
      return resetTime;
    }

    /**
     * Sets the value of the 'resetTime' field
     */
    public wandou.avro.Ohlc.Builder setResetTime(long value) {
      validate(fields()[0], value);
      this.resetTime = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
     * Checks whether the 'resetTime' field has been set
     */
    public boolean hasResetTime() {
      return fieldSetFlags()[0];
    }

    /**
     * Clears the value of the 'resetTime' field
     */
    public wandou.avro.Ohlc.Builder clearResetTime() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
     * Gets the value of the 'open' field
     */
    public java.lang.Double getOpen() {
      return open;
    }

    /**
     * Sets the value of the 'open' field
     */
    public wandou.avro.Ohlc.Builder setOpen(double value) {
      validate(fields()[1], value);
      this.open = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
     * Checks whether the 'open' field has been set
     */
    public boolean hasOpen() {
      return fieldSetFlags()[1];
    }

    /**
     * Clears the value of the 'open' field
     */
    public wandou.avro.Ohlc.Builder clearOpen() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
     * Gets the value of the 'high' field
     */
    public java.lang.Double getHigh() {
      return high;
    }

    /**
     * Sets the value of the 'high' field
     */
    public wandou.avro.Ohlc.Builder setHigh(double value) {
      validate(fields()[2], value);
      this.high = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
     * Checks whether the 'high' field has been set
     */
    public boolean hasHigh() {
      return fieldSetFlags()[2];
    }

    /**
     * Clears the value of the 'high' field
     */
    public wandou.avro.Ohlc.Builder clearHigh() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
     * Gets the value of the 'low' field
     */
    public java.lang.Double getLow() {
      return low;
    }

    /**
     * Sets the value of the 'low' field
     */
    public wandou.avro.Ohlc.Builder setLow(double value) {
      validate(fields()[3], value);
      this.low = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
     * Checks whether the 'low' field has been set
     */
    public boolean hasLow() {
      return fieldSetFlags()[3];
    }

    /**
     * Clears the value of the 'low' field
     */
    public wandou.avro.Ohlc.Builder clearLow() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
     * Gets the value of the 'close' field
     */
    public java.lang.Double getClose() {
      return close;
    }

    /**
     * Sets the value of the 'close' field
     */
    public wandou.avro.Ohlc.Builder setClose(double value) {
      validate(fields()[4], value);
      this.close = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
     * Checks whether the 'close' field has been set
     */
    public boolean hasClose() {
      return fieldSetFlags()[4];
    }

    /**
     * Clears the value of the 'close' field
     */
    public wandou.avro.Ohlc.Builder clearClose() {
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public Ohlc build() {
      try {
        Ohlc record = new Ohlc();
        record.resetTime = fieldSetFlags()[0] ? this.resetTime : (java.lang.Long) defaultValue(fields()[0]);
        record.open = fieldSetFlags()[1] ? this.open : (java.lang.Double) defaultValue(fields()[1]);
        record.high = fieldSetFlags()[2] ? this.high : (java.lang.Double) defaultValue(fields()[2]);
        record.low = fieldSetFlags()[3] ? this.low : (java.lang.Double) defaultValue(fields()[3]);
        record.close = fieldSetFlags()[4] ? this.close : (java.lang.Double) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
